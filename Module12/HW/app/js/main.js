'use strict'
const log = txt => console.log(txt);

/* 
  –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è url –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫-–∑–∞–∫–ª–∞–¥–æ–∫. 
  
  –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Gulp –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞, JS –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ç—Ä–∞–Ω—Å–ø–∞–π–ª–µ—Ä–æ–º Babel, —Ä–µ—Å—É—Ä—Å—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
    
    - –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–∫–ª–∞–¥–∫–∏, –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –µ—Å—Ç—å —Ñ–æ—Ä–º–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º input –∏ –∫–Ω–æ–ø–∫–æ–π "–î–æ–±–∞–≤–∏—Ç—å"
    
    - –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫-–∑–∞–∫–ª–∞–¥–æ–∫, —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—â–∏–π—Å—è –ø–æ–¥ —Ñ–æ—Ä–º–æ–π
    
    - –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä Handlebars –¥–ª—è
      —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫. –§–æ—Ä–º–∞ —É–∂–µ –µ—Å—Ç—å –≤ HTML –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
      
    - –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –≤ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã –∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å", –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:
        * –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏ —Å —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–æ–π –≤ —Ç–µ–∫—É—â–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∑–∞–∫–ª–∞–¥–æ–∫. –ï—Å–ª–∏ —Ç–∞–∫–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ –µ—Å—Ç—å,
          –≤—Å–ø–ª—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –æ–ø–æ–≤–µ—â–∞—é—â–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–∫–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ —É–∂–µ –µ—Å—Ç—å.
        * –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –≤–∞–ª–∏–¥–Ω–æ–π, –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å—Å—ã–ª–∫–∏, –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–æ–π
          –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é.
          
    - –í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ, –Ω–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–∞–≤–µ—Ä—Ö —Å–ø–∏—Å–∫–∞, –∞ –Ω–µ –≤–Ω–∏–∑.
    
    - –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞-–∑–∞–∫–ª–∞–¥–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –ø—Ä–∏ –∫–ª–∏–∫–µ 
      –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–¥–∞–ª–µ–Ω–∏–µ.
      
    - –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –±—Ä–∞—É–∑–µ—Ä–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç
      –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏-–∑–∞–∫–ª–∞–¥–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ localStorage
      
  üîî –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ
*/

/*
 ‚ö†Ô∏è –ó–ê–î–ê–ù–ò–ï –ü–û–í–´–®–ï–ù–ù–û–ô –°–õ–û–ñ–ù–û–°–¢–ò - –í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û –ñ–ï–õ–ê–ù–ò–Æ
  
    - –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –≤ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã –∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å", –ø—Ä–æ–∏—Å—Ö–æ–¥–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ 
      –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏: –µ—Å–ª–∏ –±—ã–ª –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π url —Ç–æ –¥–æ–ª–∂–Ω–æ –≤—Å–ø–ª—ã–≤–∞—Ç—å 
      –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ, –æ–ø–æ–≤–µ—â–∞—é—â–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π url. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ
      —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ url.
          
    - –ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ –∞–¥—Ä–µ—Å—É –∑–∞–∫–ª–∞–¥–∫–∏,
      –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–∏–º Rest API - https://www.linkpreview.net/
*/
	const key = '5c265894d43f1d1580ffa62584e53c27d612d3cfaf289';
// const Handlebars = require('handlebars');
const cardMarkup = document.querySelector('.cards');
const forSearching = {
	input: document.querySelector('input[type="text"]'),
	submit: document.querySelector('input[type="submit"]')
}

const source = document.querySelector('.cardTemplate').innerHTML.trim();

const template = Handlebars.compile(source);
(function(){
 console.log('obj');
	Object.values(localStorage).map(i => {
	cardMarkup.insertAdjacentHTML('afterbegin', template(JSON.parse(i)))
})
})();

let countStorage = 0;
// log(template(sourceJSON))
// cardMarkup.insertAdjacentHTML('afterbegin', template(sourceJSON))
function isValidUrl(url)
{
  var objRE = /(^https?:\/\/)?[a-z0-9~_\-\.]+\.[a-z]{2,9}(\/|:|\?[!-~]*)?$/i;
  return objRE.test(url);
}
function fetchAPI(link) {
	return fetch(`http://api.linkpreview.net/`, {
		method: 'POST',
  		mode: 'cors',
  		body: JSON.stringify({key: key, q: link}),
	})
			.then(response => {
				if(response.ok) return response.json();
				throw new Error('Error in fetching')
			})
			.catch(err => log('–ê–®–ò–ë–ö–ê',err))
}

// fetchAPI().then(data => log(data))

forSearching.submit.addEventListener('click', handleInputLink);
// localStorage.setItem('myCat', 'Tom');
function handleInputLink(){
	if(!isValidUrl(forSearching.input.value)){
		alert('Invalid url');

		return
	}
	fetchAPI(forSearching.input.value).then(data => {
		if(!data){
			alert('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ((')
			return
		}
		countStorage += 1;
		cardMarkup.insertAdjacentHTML('afterbegin', template(data))
		console.log(data);
		localStorage.setItem(forSearching.input.value, JSON.stringify(data));
		forSearching.input.value = '';
	})
}

// console.log(localStorage.getItem(1));

















